% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DR.R
\name{DR_PCA}
\alias{DR_PCA}
\title{Dimensional reduction via maximizing variation}
\usage{
DR_PCA(X, N0, Y = NULL, CORmat = FALSE)
}
\arguments{
\item{X}{An \eqn{p \times p \times n} array data.}

\item{N0}{Reduced dimension.}

\item{Y}{An \eqn{p \times p \times n} array data with the same structure with \eqn{X}. If it is \code{NULL}, we will do PCA method for \eqn{X}, otherwise,
we will reduce dimensions of \eqn{Y} by multiplying the eigenvector matrix from \eqn{X}.}

\item{CORmat}{Logical values. Default value is \code{FALSE},
the return data will be covariance matrices, otherwise, correlation matrices.}
}
\value{
An \eqn{N_0 \times N_0 \times n} array data.
}
\description{
Dimensional reduction for full rank covariance (or correlation) matrices via
PCA method.
}
\details{
Computing the full \eqn{q \times q} sample covariance matrices \eqn{\{S'_i, i = 1,\ldots,n\}},
we then seek linear combinations of channels \eqn{u \in \mathbb{R}^q} which maximize \eqn{\frac{1}{n}\sum_{i}u^TS_i'u},
where \eqn{(\cdot)^T} denotes the transpose.
In other words, we find the eigenvectors \eqn{u_1,\ldots,u_p} of \eqn{\frac{1}{n}\sum_{i}S_i'} with the largest\eqn{p} eigenvalues.
The time series of covariance (or correlation) matrices \eqn{S_i} (or \eqn{C_i}) defined as the sample covariances (correlation) of these linear combinations:
\deqn{ S_i  =  \mathrm{Cov}{\{Uz_{(i-1)f + 1},\ldots,Uz_{if}\}} = US_i'U^T }
or
\deqn{C_i  = \mathrm{Cor}{ \{Uz_{(i-1)f + 1},\ldots,Uz_{if}\} }}
where the \eqn{p \times q} matrix \eqn{U} has rows \eqn{u_1^T,\ldots,u_p^T}.
}
\note{
\eqn{X} and \eqn{Y} should be the covariance matrices.
When we reduce the dimension of correlation matrices,
we tend to do PCA on covariance matrices and then convert it to correlation matrices.
}
\examples{
data(EEG)
# Covariance matrix
eegcov = EEG$seizure1
resu = DR_PCA(eegcov,N0 =15,CORmat =FALSE)
# Correlation matrix using common eigenvectors
eegcov2 = EEG$interictal1
resu2 = DR_PCA(X = eegcov,N0 = 15,Y = eegcov2,CORmat = TRUE)
}
